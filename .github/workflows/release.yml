name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Create GitHub release from tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Extract version from tag
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Creating GitHub release for tag version: $TAG_VERSION"

          # Update pyproject.toml version to match tag
          CURRENT_VERSION=$(grep 'version = ' pyproject.toml | sed 's/.*version = "\(.*\)".*/\1/')

          if [ "$CURRENT_VERSION" != "$TAG_VERSION" ]; then
            echo "Updating pyproject.toml version from $CURRENT_VERSION to $TAG_VERSION"
            sed -i "s/version = \".*\"/version = \"$TAG_VERSION\"/" pyproject.toml
            uv sync
            git add pyproject.toml uv.lock
            git commit -m "chore: bump version to $TAG_VERSION [skip ci]"
            git push origin main
          fi

          # Create GitHub release using existing tag
          uv run semantic-release version --no-commit --no-tag --no-push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

