name: Update Release PR Title

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  update-pr-title:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, 'chore(release)')
    
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Get next version from dev branch RC tags
        id: get_version
        run: |
          # Get the latest RC version from dev branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Get latest RC tag from dev branch
          LATEST_RC_TAG=$(git tag -l "*-rc.*" --sort=-version:refname | head -1 || echo "")
          
          if [ -n "$LATEST_RC_TAG" ]; then
            # Extract base version (remove -rc.X suffix)
            BASE_VERSION=$(echo "$LATEST_RC_TAG" | sed 's/v//' | sed 's/-rc\.[0-9]*$//')
            echo "next_version=v$BASE_VERSION" >> $GITHUB_OUTPUT
            echo "should_update=true" >> $GITHUB_OUTPUT
          else
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Update PR title
        if: steps.get_version.outputs.should_update == 'true'
        run: |
          NEW_TITLE="release: ${{ steps.get_version.outputs.next_version }}"
          
          gh pr edit ${{ github.event.pull_request.number }} --title "$NEW_TITLE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}