#!/usr/bin/env julia

using PkgTemplates
using LibGit2: GitError

println("Loading PkgTemplates.jl...")
try
    println("Creating package: {{ package_name }}")
{% if authors %}    println("Authors: {{ authors|join(', ') }}")
{% endif %}{% if user %}    println("User: {{ user }}")
{% endif %}{% if mail %}    println("Mail: {{ mail }}")
{% endif %}    println("Output directory: {{ output_dir }}")
    println("Plugins: {{ plugins|length }} plugins configured")
{% if julia_version %}    println("Julia version: {{ julia_version }}")
{% endif %}
    t = Template(;
        dir="{{ output_dir }}",
{% if authors %}{% if mail and authors|length == 1 %}        authors=["{{ authors[0] }} <{{ mail }}>"],  # Single author with email integration
{% else %}        authors=[{% for author in authors %}"{{ author }}"{% if not loop.last %}, {% endif %}{% endfor %}],  # Multiple authors support
{% endif %}{% endif %}{% if user %}        user="{{ user }}",
{% endif %}{% if julia_version %}        julia=v"{{ julia_version.lstrip('v') }}",
{% endif %}        plugins=[{{ plugins|join(', ') }}]
    )

    package_dir = t("{{ package_name }}")
    println("Package created successfully at: $package_dir")

catch e
    println("Error creating package: $e")
    if isa(e, GitError)
        println("Git error details: $(e.msg)")
        println("Git error code: $(e.code)")
        println("Git error class: $(e.class)")
    end
    showerror(stdout, e, catch_backtrace())
    rethrow(e)
end